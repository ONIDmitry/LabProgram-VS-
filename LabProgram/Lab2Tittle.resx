<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="label3.Text" xml:space="preserve">
    <value>Темпоральная база знаний - база знаний, состоящая из продукционных правил, каждая из которых содержите временные соотношения между объектами
заданной проблемной области.
Темпоральными объектами являются события, возникающие в проблемной области, и интервалы, отражающие протекание какого-либо процесса. 
Событие представляется как темпоральный объект c основным атрибутом - условием возникновения. Тип данного атрибута - логическое выражение,
значение которого представляет собой обычное логическое выражение, связывающее атрибуты других объектов проблемной области, не являющихся
темпоральными примитивами.
Интервал представляется в виде темпорального объекта с двумя основными атрибутами - условием начала и условием окончания. Оба данных атрибута
имеют тип «логическое выражение». Истинность значения атрибута условие начала в момент времени T1 показывает, что данный интервал начался
в момент времени T1, а истинность значения атрибута условие окончания в момент времени T2 показывает то, что данный интервал закончился
в момент времени T2, т.е. интерпретацией данного интервала на временную ось является отрезок [T1,T2], где T1 всегда меньше T2. 
Темпоральное правило имеет вид: Правило (IR, Ins, Cons), где IR - порядковый номер темпорального правила; Ins - посылка темпорального правила,
которая содержит некоторую локальную модель развития событий, описанную с помощью событий, темпоральных интервалов
(с учетом длительностей), частоты их возникновения и отношений между ними, Cons - действие правила, которое содержит список атрибутов с 
присваиваемыми им значениями. Применение правой части (означивание) правила в таком случае может быть выполнено только при
соответствии этой локальной модели текущему развитию событий в проблемной области.
</value>
  </data>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAKisAAAEAIAC4HQAAFgAAACgAAAAqAAAAVgAAAAEAIAAAAAAAOBwAAMMOAADDDgAAAAAAAAAA
        AAD/////////////////////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////////////////////
        ////////////////////////////////////////ADqQ/wAAAP8AAAD/AAAA/wAAAP+QOgD////b////
        ////////////////////////AGa2/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/7ZmAP//////////////
        ////////kNv//wAAOv8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP86AAD//9uQ////////////////////
        /////////////////////////////zqQ2/8AAAD/ZgAA////tv//////////////////////////////
        /////////////7b///8AAGb/AAAA/wAAAP9mAAD///+2////////////////////////////////////
        ////////AGa2/wAAAP8AAAD/tmYA////////////////////////////////////////////////////
        //////////////////8AZrb/kDoA////2////////////////////////////////////////////9v/
        //8AOpD/AAAA/zoAAP//25D/////////////////////////////////////////////////Zrb//wAA
        AP8AAAD//7Zm////////////////////////////////////////////////////////////////////
        //+Q2///OgA6///bkP///////////////////////////////////////////2a2//8AAAD/AAAA/7Zm
        AP//////////////////////////////////////////////////////Zrb//wAAAP8AAAD//7Zm////
        ///////////////////////////////////////////////////////////////////b////ADqQ/7Zm
        AP///////////////////////////////////////////wBmtv8AAAD/OgAA///bkP//////////////
        ////////////////////////////////////////Zrb//wAAAP8AAAD//7Zm////////////////////
        ////////////////////////////////////////////////////////Zrb//zoAAP//25D/////////
        ////////////////////////tv///wAAZv8AAAD/kDoA////2///////////////////////////////
        ////////////////////////Zrb//wAAAP8AAAD//7Zm////////////////////////////////////
        ////////////////////////////////////////2////wA6kP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/25A6////////////////////////////////////////////////////
        ////////Zrb//wAAAP8AAAD//7Zm////////////////////////////////////////////////////
        /////////////////////////////zqQ2/9mAAD///+2///////////////////////b////ADqQ/wAA
        AP9mAAD///+2////////////////////////////////////////////////////////////Zrb//wAA
        AP8AAAD//7Zm////////////////////////////////////////////////////////////////////
        /////////////7b///8AAGb/25A6//////////////////////+Q2///AAA6/wAAAP+2ZgD/////////
        ////////////////////////////////////////////////////////Zrb//wAAAP8AAAD//7Zm////
        ////////////////////////////////////////////////////////////////////////////////
        //8AZrb/kDoA////2/////////////////86kNv/AAAA/wAAAP//tmb/////////////////////////
        ////////////////////////////////////////Zrb//wAAAP8AAAD//7Zm////////////////////
        //////////////////////////////////////////////////////////////////+Q2///AAA6//+2
        Zv///////////7b///8AAGb/AAAA/2YAAP///7b/////////////////////////////////////////
        ////////////////////////Zrb//wAAAP8AAAD//7Zm////////////////////////////////////
        ////////////////////////////////////////////////////////AGa2/5A6AP///9v//////2a2
        //8AAAD/AAAA/9uQOv//////////////////////////////////////////////////////////////
        ////////Zrb//wAAAP8AAAD//7Zm////////////////////////////////////////////////////
        ////////////////////////////////////////Zrb//wAAAP//tmb//////wBmtv8AAAD/OgAA///b
        kP//////////////////////////////////////////////////////////////////////Zrb//wAA
        AP8AAAD//7Zm////////////////////////////////////////////////////////////////////
        ////////////////////////2////wA6kP+QOgD/kNvb/wAAOv8AAAD/kDoA////2///////////////
        ////////////////////////////////////////////////////////Zrb//wAAAP8AAAD//7Zm////
        ////////////////////////////////////////////////////////////////////////////////
        /////////////zqQ2/86AAD/OmZm/wAAAP8AAAD//7Zm////////////////////////////////////
        ////////////////////////////////////////Zrb//wAAAP8AAAD//7Zm////////////////////
        /////////////////////////////////////////////////////////////////////////////7b/
        //8AAGb/AAAA/wAAAP9mAAD///+2//////////////////////////////////////+2////25CQ////
        ////////////////////////Zrb//wAAAP8AAAD//7Zm////////////////////////////Zrb///+2
        Zv////////////////////////////////////////////////////////////////86kNv/AAAA/wAA
        AP+2ZgD///////////////////////////////////////////+2////kDpm////2///////////////
        ////////Zrb//wAAAP8AAAD//7Zm////////////////////////////Oma2///bkP//////////////
        //////////////////////////////////////////////////+Q2///AAA6/zoAAP//25D/////////
        //////////////////////////////////+2////AABm/5A6AP///9v/////////////////Zrb//wAA
        AP8AAAD//7Zm//////////////////////8AZrb/OgAA///bkP//////////////////////////////
        ////////////////////////////////////////AGa2/5A6AP///9v/////////////////////////
        //////////////////+2////AABm/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/OgAA///bkP//////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////////////////////
        //////////////////////////////////8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAA==
</value>
  </data>
</root>